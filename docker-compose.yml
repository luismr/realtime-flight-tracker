# Flight Tracker Services
services:

  # Flight Tracker Event Producer
  flight-tracker-event-producer:
    build:
      context: ./flight-tracker-event-producer
      dockerfile: Dockerfile
    environment:
      - CRON_SCHEDULE=${FLITGH_TRACKER_EVENT_PRODUCER_CRON_SCHEDULE}
      - OPENSKY_URL=${FLIGHT_TRACKER_EVENT_PRODUCER_OPENSKY_URL}
      - KAFKA_BOOTSTRAP_SERVERS=${FLIGHT_TRACKER_EVENT_PRODUCER_KAFKA_BOOTSTRAP_SERVERS}
      - KAFKA_TOPIC=${FLIGHT_TRACKER_EVENT_PRODUCER_KAFKA_TOPIC}
      - KAFKA_LOGLEVEL=${FLIGHT_TRACKER_EVENT_PRODUCER_KAFKA_LOGLEVEL}
      - LOGLEVEL=${FLIGHT_TRACKER_EVENT_PRODUCER_LOGLEVEL}
      - LAT_MIN=${FLIGHT_TRACKER_EVENT_PRODUCER_LAT_MIN}
      - LAT_MAX=${FLIGHT_TRACKER_EVENT_PRODUCER_LAT_MAX}
      - LON_MIN=${FLIGHT_TRACKER_EVENT_PRODUCER_LON_MIN}
      - LON_MAX=${FLIGHT_TRACKER_EVENT_PRODUCER_LON_MAX}
    networks:
      - flight-tracker-network
    volumes:
      - ./flight-tracker-event-producer:/app
      - flight-tracker-producer-logs:/var/log
    depends_on:
      - broker1
      - broker2
      - broker3
    restart: unless-stopped

networks:
  flight-tracker-network:
    driver: bridge

volumes:
  flight-tracker-producer-logs: 